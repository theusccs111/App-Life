@model APP_Life.Models.usuario

@{
    ViewBag.Title = "InfoUsuario";
}


<style>
    form {
        width: 100%;
    }
    .container{
        margin:2%;
    }
</style>

@using (Html.BeginForm("InfoUsuario", "Usuario", new { @class = "" },
                                                  FormMethod.Post))
{
    @Html.AntiForgeryToken()



    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.usuarioID)
    <div class="container">

        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.senha, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.senha,  new { @class = "form-control"  })
                    @Html.ValidationMessageFor(model => model.senha, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
    </div>
    <div class="container">
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.sobrenome, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.sobrenome, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.sobrenome, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
    </div>
        <div class="container">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.datanasc, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.datanasc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.datanasc, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div class="col-md-6">
                @if (Model.sexo == "m")
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.sexo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <label class="form-control">Masculino</label>
                            @Html.ValidationMessageFor(model => model.sexo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
                else if (Model.sexo == "f")
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.sexo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <label class="form-control">Feminino</label>
                            @Html.ValidationMessageFor(model => model.sexo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                }
            </div>
        </div>
            <div class="container">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.telefone, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.telefone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.telefone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.rua, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.rua, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.rua, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>
            <div class="container">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.numero, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.numero, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.numero, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.bairro, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.bairro, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.bairro, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>
            <div class="container">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.cidade, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.cidade, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.cidade, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.estado, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Salvar" class="btn btn-default" />
                </div>
            </div>

}

<div>
    @Html.ActionLink("Voltar", "Geral", "Lancamento")
</div>


